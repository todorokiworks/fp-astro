---
import Layout from "../../layouts/Layout.astro";
import { getAllNews } from "../../lib/microcms";

// ページネーション用のパラメータ
const page = parseInt(Astro.url.searchParams.get("page") || "1");
const limit = 20;
const offset = (page - 1) * limit;

// お知らせデータを取得
const { contents: newsList, totalCount } = await getAllNews(limit, offset);
const totalPages = Math.ceil(totalCount / limit);
---

<Layout
    title="新着情報一覧 ｜テンポスフードプレイス"
    description=""
    pageUrl="/news/"
    ogimage=""
>
    <article id="mainarea">
        <div class="tp-border sans">
            <nav class="tp-nav">
                <ol class="tp-nav__list flex">
                    <li><a href="/">トップページ</a></li>
                    <li><a href="/news/">新着情報</a></li>
                </ol>
            </nav>

            <!-- mv画像・カテゴリ名部分ここから -->
            <section class="btm-front__section news">
                <h1 class="btm-front__ttl font_m_plus">
                    <span>新着情報</span>
                </h1>
            </section>
            <!-- mv画像・カテゴリ名部分ここまで -->

            <section class="kg-open__section btm-sec tp-wrapper">
                <p class="kg-news__caption">新着情報一覧</p>

                <!-- 情報一覧追加　ここから -->
                <div class="top-news__container">
                    <ul class="top-news__list_2">
                        {
                            newsList.length > 0 ? (
                                newsList.map((news) => (
                                    <li>
                                        <a href={`./${news.id}/`}>
                                            <span class="Date">
                                                <time
                                                    itemprop="datePublished"
                                                    datetime={
                                                        new Date(
                                                            news.publishedAt,
                                                        )
                                                            .toISOString()
                                                            .split("T")[0]
                                                    }
                                                >
                                                    {new Date(news.publishedAt)
                                                        .toLocaleDateString(
                                                            "ja-JP",
                                                            {
                                                                year: "numeric",
                                                                month: "2-digit",
                                                                day: "2-digit",
                                                            },
                                                        )
                                                        .replace(/\//g, ".")}
                                                </time>
                                            </span>
                                            <span class="Caption">
                                                {news.title}
                                            </span>
                                        </a>
                                    </li>
                                ))
                            ) : (
                                <li>
                                    <span class="Caption">
                                        お知らせはありません
                                    </span>
                                </li>
                            )
                        }
                    </ul>
                </div>

                <!-- ページネーション -->
                {
                    totalPages > 1 && (
                        <div class="pagination">
                            <ul class="pagination__list">
                                {page > 1 && (
                                    <li class="pagination__item">
                                        <a
                                            href={`?page=${page - 1}`}
                                            class="pagination__link"
                                        >
                                            前へ
                                        </a>
                                    </li>
                                )}

                                {Array.from(
                                    { length: totalPages },
                                    (_, i) => i + 1,
                                ).map((pageNum) => (
                                    <li class="pagination__item">
                                        <a
                                            href={`?page=${pageNum}`}
                                            class={`pagination__link ${pageNum === page ? "pagination__link--active" : ""}`}
                                        >
                                            {pageNum}
                                        </a>
                                    </li>
                                ))}

                                {page < totalPages && (
                                    <li class="pagination__item">
                                        <a
                                            href={`?page=${page + 1}`}
                                            class="pagination__link"
                                        >
                                            次へ
                                        </a>
                                    </li>
                                )}
                            </ul>
                        </div>
                    )
                }
                <!-- 情報一覧追加　ここまで -->
            </section>
        </div>
    </article>
</Layout>

<style lang="scss">
    .pagination {
        margin-top: 2rem;
        text-align: center;
    }

    .pagination__list {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 0.5rem;
        list-style: none;
        padding: 0;
    }

    .pagination__link {
        display: inline-block;
        padding: 0.5rem 1rem;
        border: 1px solid var(--MAIN_BLACK);
        text-decoration: none;
        color: var(--MAIN_BLACK);
        transition: all 0.3s ease;

        &:hover {
            background-color: var(--MAIN_BLACK);
            color: var(--MAIN_WHITE);
        }

        &--active {
            background-color: var(--MAIN_BLACK);
            color: var(--MAIN_WHITE);
        }
    }
</style>
